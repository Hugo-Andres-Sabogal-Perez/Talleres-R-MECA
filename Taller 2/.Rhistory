library(readr)
# 1. Primer punto ----------------------------------------
## 1.1. Semilla ------------------------------------------
df <- read_csv(unzip('Datos_taller.zip', 'precios_carbon.csv'))
View(df)
library(readr)
# 1. Primer punto ----------------------------------------
## 1.1. Semilla ------------------------------------------
carbon <- read_csv(unzip('Datos_taller.zip', 'precios_carbon.csv'))
rm(carbon)
library(readr)
# 1. Primer punto ----------------------------------------
## 1.1. importar bases de datos ------------------------------------------
carbon <- read_csv(unzip('Datos_taller.zip', 'precios_carbon.csv'))
brent <- read_csv(unzip('Datos_taller.zip', 'precios_petroleo.csv'))
gasolina <- read_csv(unzip('Datos_taller.zip', 'gasolina_petroleo.csv'))
gas_natural <- read_csv(unzip('Datos_taller.zip', 'gas_natural_petroleo.csv'))
View(gas_natural)
#Limpiaar entorno
rm(list = ls())
library(readr)
# 1. Primer punto ----------------------------------------
## 1.1. importar bases de datos ------------------------------------------
carbon <- read_csv(unzip('Datos_taller.zip', 'precios_carbon.csv'))
brent <- read_csv(unzip('Datos_taller.zip', 'precios_petroleo.csv'))
gasolina <- read_csv(unzip('Datos_taller.zip', 'precios_gasolina_petroleo.csv'))
gas_natural <- read_csv(unzip('Datos_taller.zip', 'precios_gas_natural_petroleo.csv'))
gasolina <- read_csv(unzip('Datos_taller.zip', 'precios_gasolina.csv'))
gas_natural <- read_csv(unzip('Datos_taller.zip', 'precios_gas_natural.csv'))
View(brent)
View(carbon)
View(brent)
View(carbon)
View(gas_natural)
View(gasolina)
ipc <- read_csv(unzip('Datos_taller.zip', '1.2.5.IPC_Serie_variaciones.csv'))
View(ipc)
## 1.2. Exploración bases de datos ------------------------------------------
summary(carbon)
info(carbon)
skim(carbon)
skim(carbon)
library(skim)
require(skim)
skim(iris2)
summary(carbon)
## 1.2. Exploración bases de datos ------------------------------------------
summary(carbon)
summary(brent)
summary(gasolina)
summary(gas_natural)
summary(ipc)
View(ipc)
View(ipc)
View(gasolina)
View(brent)
#Limpiaar entorno
rm(list = ls())
# 1.Importmos liberias -----------------
library(readr)
# 1. Primer punto ----------------------------------------
## 1.1. importar bases de datos ------------------------------------------
carbon <- read_csv(unzip('Datos_taller.zip', 'precios_carbon.csv'))
brent <- read_csv(unzip('Datos_taller.zip', 'precios_petroleo.csv'))
gasolina <- read_csv(unzip('Datos_taller.zip', 'precios_gasolina.csv'))
gas_natural <- read_csv(unzip('Datos_taller.zip', 'precios_gas_natural.csv'))
ipc <- read_csv(unzip('Datos_taller.zip', '1.2.5.IPC_Serie_variaciones.csv'))
intersect(carbon$fecha, brent$fecha)
intersect(carbon$fecha, brent$fecha, gasolina$fecha)
intersect(carbon$fecha, brent$fecha, gasolina$fecha)
intersect(carbon$fecha, gasolina$fecha)
length(intersect(carbon$fecha, gasolina$fecha))
carbon$fecha
length(intersect(carbon$fecha, gasolina$fecha))
intersect(carbon$fecha, gasolina$fecha)
carbon$fecha
# 1.Importmos liberias -----------------
library(readr)
# 1. Primer punto ----------------------------------------
## 1.1. importar bases de datos ------------------------------------------
carbon <- read_csv(unzip('Datos_taller.zip', 'precios_carbon.csv'))
brent <- read_csv(unzip('Datos_taller.zip', 'precios_petroleo.csv'))
gasolina <- read_csv(unzip('Datos_taller.zip', 'precios_gasolina.csv'))
gas_natural <- read_csv(unzip('Datos_taller.zip', 'precios_gas_natural.csv'))
ipc <- read_csv(unzip('Datos_taller.zip', '1.2.5.IPC_Serie_variaciones.csv'))
## 1.2. Exploración bases de datos ------------------------------------------
summary(carbon)
summary(brent)
summary(gasolina)
summary(gas_natural)
summary(ipc)
intersect(carbon$fecha, gasolina$fecha)
intersect(as.character(carbon$fecha), as.character(gasolina$fecha))
intersect(carbon$fecha, brent$fecha)
lenght(intersect(carbon$fecha, brent$fecha))
length(intersect(carbon$fecha, brent$fecha))
setdiff(carbon$fecha, brent$fecha)
length(intersect(carbon$fecha, brent$fecha))
View(brent)
setdiff(as.charater(carbon$fecha), as.character(brent$fecha))
setdiff(as.character(carbon$fecha), as.character(brent$fecha))
length(setdiff(as.character(carbon$fecha), as.character(brent$fecha)))
#Limpiaar entorno
rm(list = ls())
# 1.Importmos liberias -----------------
library(readr)
# 1. Primer punto ----------------------------------------
## 1.1. importar bases de datos ------------------------------------------
carbon <- read_csv(unzip('Datos_taller.zip', 'precios_carbon.csv'))
brent <- read_csv(unzip('Datos_taller.zip', 'precios_petroleo.csv'))
gasolina <- read_csv(unzip('Datos_taller.zip', 'precios_gasolina.csv'))
gas_natural <- read_csv(unzip('Datos_taller.zip', 'precios_gas_natural.csv'))
ipc <- read_csv(unzip('Datos_taller.zip', '1.2.5.IPC_Serie_variaciones.csv'))
## 1.2. Exploración bases de datos ------------------------------------------
summary(carbon)
summary(brent)
summary(gasolina)
summary(gas_natural)
summary(ipc)
## 1.2. Exploración bases de datos ------------------------------------------
summary(carbon)
head(brent)
View(brent)
View(ipc)
View(gasolina)
length(setdiff(as.character(carbon$fecha), as.character(brent$fecha)))
8667/24
setdiff(as.character(carbon$fecha), as.character(brent$fecha))
View(gas_natural)
View(ipc)
#Limpiaar entorno
rm(list = ls())
# 1.Importmos liberias -----------------
library(readr)
# 1. Primer punto ----------------------------------------
## 1.1. importar bases de datos ------------------------------------------
carbon <- read_csv(unzip('Datos_taller.zip', 'precios_carbon.csv'))
brent <- read_csv(unzip('Datos_taller.zip', 'precios_petroleo.csv'))
gasolina <- read_csv(unzip('Datos_taller.zip', 'precios_gasolina.csv'))
gas_natural <- read_csv(unzip('Datos_taller.zip', 'precios_gas_natural.csv'))
ipc <- read_csv(unzip('Datos_taller.zip', '1.2.5.IPC_Serie_variaciones.csv'))
## 1.2. Exploración bases de datos ------------------------------------------
summary(carbon)
summary(brent)
summary(gasolina)
summary(gas_natural)
summary(ipc)
#Limpiaar entorno
rm(list = ls())
# 1.Importmos liberias -----------------
library(readr)
# 1. Primer punto ----------------------------------------
## 1.1. importar bases de datos ------------------------------------------
carbon <- read_csv(unzip('Datos_taller.zip', 'precios_carbon.csv'))
brent <- read_csv(unzip('Datos_taller.zip', 'precios_petroleo.csv'))
gasolina <- read_csv(unzip('Datos_taller.zip', 'precios_gasolina.csv'))
gas_natural <- read_csv(unzip('Datos_taller.zip', 'precios_gas_natural.csv'))
ipc <- read_csv(unzip('Datos_taller.zip', '1.2.5.IPC_Serie_variaciones.csv'))
## 1.2. Exploración bases de datos ------------------------------------------
summary(carbon)
summary(brent)
summary(gasolina)
summary(gas_natural)
summary(ipc)
## 1.3. Explicitar fechas faltantes
View(gas_natural)
View(brent)
View(brent)
View(gasolina)
View(gas_natural)
brent['precio_pretroleo']
brent[precio_pretroleo]
brent[['precio_pretroleo']]
brent[1]
brent[fecha]
brent['fecha']
#Limpiaar entorno
rm(list = ls())
# 1.Importmos liberias -----------------
library(readr)
# 1. Primer punto ----------------------------------------
## 1.1. importar bases de datos ------------------------------------------
carbon <- read_csv(unzip('Datos_taller.zip', 'precios_carbon.csv'))
brent <- read_csv(unzip('Datos_taller.zip', 'precios_petroleo.csv'))
gasolina <- read_csv(unzip('Datos_taller.zip', 'precios_gasolina.csv'))
gas_natural <- read_csv(unzip('Datos_taller.zip', 'precios_gas_natural.csv'))
ipc <- read_csv(unzip('Datos_taller.zip', '1.2.5.IPC_Serie_variaciones.csv'))
## 1.2. Exploración bases de datos ------------------------------------------
summary(carbon)
summary(brent)
summary(gasolina)
summary(gas_natural)
summary(ipc)
## 1.3. agregar fechas faltantes
agregar_fechas_faltantes <- function(dataframe) {
fechas_completas <- data.frame(fecha= seq(as.Date("2000-01-01"),as.Date("2024-01-31"),by="1 day"))
data <- full_join(fechas_completas, dataframe, by=c("fecha"))
return(data)
}
brent <- agregar_fechas_faltantes(brent)
library(tidyverse)
brent <- agregar_fechas_faltantes(brent)
bases <- c("brent", "gasolina")
for i in bases{
bases <- c("brent", "gasolina")
for (i in bases){
print(i)
}
bases <- c(brent, gasolina)
for (i in bases){
base <- agregar_fechas_faltantes(i)
}
print(bases)
View(bases)
bases <- list(brent, gasolina)
View(bases)
bases <- list(brent, gasolina)
for (i in bases){
base <- agregar_fechas_faltantes(i)
}
View(base)
View(base)
View(bases)
bases <- list(brent, gasolina, carbon, gas_natural)
View(bases)
rm(i)
rm(bases)
rm(base)
brent <- agregar_fechas_faltantes(brent)
gas_natural <- agregar_fechas_faltantes(gas_natural)
carbon <- agregar_fechas_faltantes(carbon)
gasolina <- agregar_fechas_faltantes(gasolina)
?left_join()
?merge
View(brent)
df_unido <- rbind(brent, carbon$precio_carbon, gas_natural$precio_gas_natural, gasolina$precio_gasolina)
summary(df_unido)
df_unido <- rbind(carbon$precio_carbon, gas_natural$precio_gas_natural, gasolina$precio_gasolina)
df_unido <- rbind(brent$fecha,
brent$precio_petroleo,
carbon$precio_carbon,
gas_natural$precio_gas_natural,
gasolina$precio_gasolina)
View(df_unido)
df_unido <- cbind(brent$fecha,
brent$precio_petroleo,
carbon$precio_carbon,
gas_natural$precio_gas_natural,
gasolina$precio_gasolina)
View(df_unido)
df_unido <- left_join(brent, carbon, by='fecha') %>%
left_join(., gas_natural, by='fecha') %>%
left_join(., gasolina, by='fecha')
View(df_unido)
#Limpiaar entorno
rm(list = ls())
# 1.Importmos liberias -----------------
library(readr)
library(tidyverse)
# 1. Primer punto ----------------------------------------
## 1.1. importar bases de datos ------------------------------------------
carbon <- read_csv(unzip('Datos_taller.zip', 'precios_carbon.csv'))
brent <- read_csv(unzip('Datos_taller.zip', 'precios_petroleo.csv'))
gasolina <- read_csv(unzip('Datos_taller.zip', 'precios_gasolina.csv'))
gas_natural <- read_csv(unzip('Datos_taller.zip', 'precios_gas_natural.csv'))
ipc <- read_csv(unzip('Datos_taller.zip', '1.2.5.IPC_Serie_variaciones.csv'))
## 1.2. Exploración bases de datos ------------------------------------------
summary(carbon)
summary(brent)
summary(gasolina)
summary(gas_natural)
summary(ipc)
## 1.3. agregar fechas faltantes -------------------
agregar_fechas_faltantes <- function(dataframe) {
fechas_completas <- data.frame(fecha= seq(as.Date("2000-01-01"),as.Date("2024-01-31"),by="1 day"))
data <- full_join(fechas_completas, dataframe, by=c("fecha"))
return(data)
}
## 1.4 aplicar la función del 1.3 -------------------------
brent <- agregar_fechas_faltantes(brent)
gas_natural <- agregar_fechas_faltantes(gas_natural)
carbon <- agregar_fechas_faltantes(carbon)
gasolina <- agregar_fechas_faltantes(gasolina)
## 1.5 Union de las bases de datos -----------------------
df_unido <- left_join(brent, carbon, by='fecha') %>%
left_join(., gas_natural, by='fecha') %>%
left_join(., gasolina, by='fecha')
month(df_unido$fecha)
year(df_unido$fecha)
month(df_unido$fecha, label=T)
df_unido$mes <- month(df_unido$fecha, label=T)
df_unido$año <-year(df_unido$fecha)
View(df_unido)
#Limpiaar entorno
rm(list = ls())
# 1.Importmos liberias -----------------
library(readr)
library(tidyverse)
# 1. Primer punto ----------------------------------------
## 1.1. importar bases de datos ------------------------------------------
carbon <- read_csv(unzip('Datos_taller.zip', 'precios_carbon.csv'))
brent <- read_csv(unzip('Datos_taller.zip', 'precios_petroleo.csv'))
gasolina <- read_csv(unzip('Datos_taller.zip', 'precios_gasolina.csv'))
gas_natural <- read_csv(unzip('Datos_taller.zip', 'precios_gas_natural.csv'))
ipc <- read_csv(unzip('Datos_taller.zip', '1.2.5.IPC_Serie_variaciones.csv'))
## 1.2. Exploración bases de datos ------------------------------------------
summary(carbon)
summary(brent)
summary(gasolina)
summary(gas_natural)
summary(ipc)
## 1.3. agregar fechas faltantes -------------------
agregar_fechas_faltantes <- function(dataframe) {
fechas_completas <- data.frame(fecha= seq(as.Date("2000-01-01"),as.Date("2024-01-01"),by="1 day"))
data <- full_join(fechas_completas, dataframe, by=c("fecha"))
return(data)
}
## 1.4 aplicar la función del 1.3 -------------------------
brent <- agregar_fechas_faltantes(brent)
gas_natural <- agregar_fechas_faltantes(gas_natural)
carbon <- agregar_fechas_faltantes(carbon)
gasolina <- agregar_fechas_faltantes(gasolina)
## 1.5 Union de las bases de datos -----------------------
df_unido <- left_join(brent, carbon, by='fecha') %>%
left_join(., gas_natural, by='fecha') %>%
left_join(., gasolina, by='fecha')
## 1.6 añadir variables de año y mes -----------------------
df_unido$mes <- month(df_unido$fecha, label=T)
df_unido$año <-year(df_unido$fecha)
is.na(df_unido)
sum(is.na(df_unido))
count(df_unido)
count(df_unido$precio_carbon)
length(df_unido)
length(df_unido$precio_petroleo)
sum(is.na(df_unido$precio_carbon))/   length(df_unido$precio_carbon)
sum(is.na(df_unido$precio_carbon))/length(df_unido$precio_carbon)
is.na(df_unido)
colMeans(is.na(df_unido))
df_unido <- df_unido %>% replace(NA, 0)
df_unido <- df_unido$precio_petroleo %>% replace(NA, 0)
df_filtrado <- filter(df_unido, año==2022)
df_filtrado <- filter(df_unido, año=="2022")
#Limpiaar entorno
rm(list = ls())
# 1.Importmos liberias -----------------
library(readr)
library(tidyverse)
# 1. Primer punto ----------------------------------------
## 1.1. importar bases de datos ------------------------------------------
carbon <- read_csv(unzip('Datos_taller.zip', 'precios_carbon.csv'))
brent <- read_csv(unzip('Datos_taller.zip', 'precios_petroleo.csv'))
gasolina <- read_csv(unzip('Datos_taller.zip', 'precios_gasolina.csv'))
gas_natural <- read_csv(unzip('Datos_taller.zip', 'precios_gas_natural.csv'))
ipc <- read_csv(unzip('Datos_taller.zip', '1.2.5.IPC_Serie_variaciones.csv'))
## 1.2. Exploración bases de datos ------------------------------------------
summary(carbon)
summary(brent)
summary(gasolina)
summary(gas_natural)
summary(ipc)
## 1.3. agregar fechas faltantes -------------------
agregar_fechas_faltantes <- function(dataframe) {
fechas_completas <- data.frame(fecha= seq(as.Date("2000-01-01"),as.Date("2024-01-01"),by="1 day"))
data <- full_join(fechas_completas, dataframe, by=c("fecha"))
return(data)
}
## 1.4 aplicar la función del 1.3 -------------------------
brent <- agregar_fechas_faltantes(brent)
gas_natural <- agregar_fechas_faltantes(gas_natural)
carbon <- agregar_fechas_faltantes(carbon)
gasolina <- agregar_fechas_faltantes(gasolina)
## 1.5 Union de las bases de datos -----------------------
df_unido <- left_join(brent, carbon, by='fecha') %>%
left_join(., gas_natural, by='fecha') %>%
left_join(., gasolina, by='fecha')
## 1.6 añadir variables de año y mes con lubridate -----------------------
df_unido$mes <- month(df_unido$fecha, label=T)
df_unido$año <-year(df_unido$fecha)
## 1.7 añadir variables de año y mes con lubridate -----------------------
colMeans(is.na(df_unido))
df_filtrado <- filter(df_unido, año=="2022")
View(df_filtrado)
View(df_unido)
df_filtrado <- mutate(ratio = precio_carbon /precio_pretroleo)
df_filtrado <- mutate(df_filtrado,ratio = precio_carbon /precio_pretroleo)
View(df_unido)
df_filtrado <- mutate(df_filtrado,ratio = precio_carbon /precio_petroleo)
df_filtrado <- df_unido %>% filter(año=="2022") %>%
mutate(ratio=precio_carbon/precio_petroleo)
View(df_filtrado)
View(df_unido)
df_unido <- df_unido %>% replace(precio_carbon, NA, 0) %>%
replace(precio_petroleo, NA, 0) %>%
replace(precio_gasolina, NA, 0) %>%
replace(precio_gas_natural, NA, 0)
View(df_unido)
?replace()
?mutate)=
?mutate()
df_unido$precio_carbon <- replace(df_unido$precio_carbon, NA, 0)
View(df_unido)
df_unido$precio_carbon <- df_unido$precio_carbon %>% replace(NA, 0)
? replace
? replace_na()
df_unido$precio_carbon <- df_unido$precio_carbon %>% replace_na(0)
#Limpiaar entorno
rm(list = ls())
# 1.Importmos liberias -----------------
library(readr)
library(tidyverse)
# 1. Primer punto ----------------------------------------
## 1.1. importar bases de datos ------------------------------------------
carbon <- read_csv(unzip('Datos_taller.zip', 'precios_carbon.csv'))
brent <- read_csv(unzip('Datos_taller.zip', 'precios_petroleo.csv'))
gasolina <- read_csv(unzip('Datos_taller.zip', 'precios_gasolina.csv'))
gas_natural <- read_csv(unzip('Datos_taller.zip', 'precios_gas_natural.csv'))
ipc <- read_csv(unzip('Datos_taller.zip', '1.2.5.IPC_Serie_variaciones.csv'))
## 1.2. Exploración bases de datos ------------------------------------------
summary(carbon)
summary(brent)
summary(gasolina)
summary(gas_natural)
summary(ipc)
## 1.3. agregar fechas faltantes -------------------
agregar_fechas_faltantes <- function(dataframe) {
fechas_completas <- data.frame(fecha= seq(as.Date("2000-01-01"),as.Date("2024-01-01"),by="1 day"))
data <- full_join(fechas_completas, dataframe, by=c("fecha"))
return(data)
}
## 1.4 aplicar la función del 1.3 -------------------------
brent <- agregar_fechas_faltantes(brent)
gas_natural <- agregar_fechas_faltantes(gas_natural)
carbon <- agregar_fechas_faltantes(carbon)
gasolina <- agregar_fechas_faltantes(gasolina)
## 1.5 Union de las bases de datos -----------------------
df_unido <- left_join(brent, carbon, by='fecha') %>%
left_join(., gas_natural, by='fecha') %>%
left_join(., gasolina, by='fecha')
## 1.6 añadir variables de año y mes con lubridate -----------------------
df_unido$mes <- month(df_unido$fecha, label=T)
df_unido$año <-year(df_unido$fecha)
## 1.7 añadir variables de año y mes con lubridate -----------------------
colMeans(is.na(df_unido))
df_unido$precio_carbon <- df_unido$precio_carbon %>% replace_na(mean(df_unido$precio_carbon))
?mean()
mean(df_unido$precio_carbon)
mean(df_unido$precio_carbon,na.omit=T)
mean(df_unido$precio_carbon,na.rmT)
mean(df_unido$precio_carbon,na.rm=T)
df_unido$precio_carbon <- df_unido$precio_carbon %>% replace_na(mean(df_unido$precio_carbon,na.rm=T))
df_unido$precio_carbon <- df_unido$precio_carbon %>%
replace_na(mean(df_unido$precio_carbon,na.rm=T))
df_unido$precio_gas_natural <- df_unido$precio_gas_natural %>%
replace_na(mean(df_unido$precio_gas_natural,na.rm=T))
df_unido$precio_gasolina <- df_unido$precio_gasolina %>%
replace_na(mean(df_unido$precio_gasolina,na.rm=T))
df_unido$precio_petroleo <- df_unido$precio_petroleo %>%
replace_na(mean(df_unido$precio_petroleo,na.rm=T))
colMeans(is.na(df_unido))
