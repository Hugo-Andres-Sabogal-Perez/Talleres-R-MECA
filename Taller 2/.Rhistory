df_unido <- left_join(brent, carbon, by='fecha') %>%
left_join(., gas_natural, by='fecha') %>%
left_join(., gasolina, by='fecha')
## 1.6 añadir variables de año y mes con lubridate -----------------------
df_unido$mes <- month(df_unido$fecha, label=T)
df_unido$año <-year(df_unido$fecha)
## 1.7 tabla % NA y remplazo de NA -----------------------
#Tabal de NA
t(t(as.matrix(colMeans(is.na(df_unido)))))
df_unido$precio_carbon <- df_unido$precio_carbon %>%
replace_na(mean(df_unido$precio_carbon,na.rm=T))
df_unido$precio_gas_natural <- df_unido$precio_gas_natural %>%
replace_na(mean(df_unido$precio_gas_natural,na.rm=T))
df_unido$precio_gasolina <- df_unido$precio_gasolina %>%
replace_na(mean(df_unido$precio_gasolina,na.rm=T))
df_unido$precio_petroleo <- df_unido$precio_petroleo %>%
replace_na(mean(df_unido$precio_petroleo,na.rm=T))
## 1.8 agrupar por año-mes  -----------------------
precios_mes <- df_unido %>% group_by(año,mes)  %>%
summarise(carbon=mean(precio_carbon),
gas_natural = mean(precio_gas_natural),
petroleo = mean(precio_petroleo),
gasolina = mean(precio_gasolina))
##### 1.9 Función IPC ------------------------
precios_reales <- function(ind_ipc, año_base, mes_base){
precios_mes$ipc <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
return(precios_filtrados)
}
prueba <- precios_reales('Indice', '2018', 'ene')
View(prueba)
View(ipc)
View(prueba)
ipc_base <- prueba[['ipc']]
precios_reales <- function(ind_ipc, año_base, mes_base,bien){
precios_mes$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
nombre_variable <- paste0(bien,año_base, mes_base, 'transformada')
precios_mes <- precios_mes %>% mutate(nombre_variable = (bien*ipc_base)/ipc_mes)
return(precios_filtrados)
}
precios_reales('Indice', '2018', 'ene', 'petroleo')
precios_reales <- function(ind_ipc, año_base, mes_base,bien){
precios_mes$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
nombre_variable <- paste0(bien,año_base, mes_base, 'transformada')
precios_mes <- precios_mes %>% mutate(nombre_variable = (petroleo*ipc_base)/ipc_mes)
return(precios_filtrados)
}
precios_reales('Indice', '2018', 'ene', 'petroleo')
a <- precios_reales('Indice', '2018', 'ene', 'petroleo')
View(a)
precios_reales <- function(ind_ipc, año_base, mes_base,bien){
precios_mes$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
class(ipc_base)
nombre_variable <- paste0(bien,año_base, mes_base, 'transformada')
precios_mes <- precios_mes %>% mutate(nombre_variable = (petroleo*ipc_base)/ipc_mes)
return(precios_filtrados)
}
a <- precios_reales('Indice', '2018', 'ene', 'petroleo')
precios_reales <- function(ind_ipc, año_base, mes_base,bien){
precios_mes$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
print(class(ipc_base))
nombre_variable <- paste0(bien,año_base, mes_base, 'transformada')
precios_mes <- precios_mes %>% mutate(nombre_variable = (petroleo*ipc_base)/ipc_mes)
return(precios_filtrados)
}
a <- precios_reales('Indice', '2018', 'ene', 'petroleo')
precios_reales <- function(ind_ipc, año_base, mes_base,bien){
precios_mes$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
print(ipc_base)
nombre_variable <- paste0(bien,año_base, mes_base, 'transformada')
precios_mes <- precios_mes %>% mutate(nombre_variable = (petroleo*ipc_base)/ipc_mes)
return(precios_filtrados)
}
a <- precios_reales('Indice', '2018', 'ene', 'petroleo')
b=5
print(b)
precios_reales <- function(ind_ipc, año_base, mes_base,bien){
precios_mes$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
print(ipc_base)
nombre_variable <- paste0(bien,año_base, mes_base, 'transformada')
precios_mes <- precios_mes %>% mutate(nombre_variable = (petroleo*ipc_base)/ipc_mes)
return(precios_mes)
}
a <- precios_reales('Indice', '2018', 'ene', 'petroleo')
View(a)
(95.93*9758)/(403)
precios_reales <- function(ind_ipc, año_base, mes_base,bien){
precios_mes$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
print(ipc_base)
precios_mes <- precios_mes %>% mutate(paste0(bien,año_base, mes_base, 'transformada') = (petroleo*ipc_base)/ipc_mes)
precios_reales <- function(ind_ipc, año_base, mes_base,bien){
precios_mes$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
precios_mes <- precios_mes %>% mutate(paste0(bien,año_base, mes_base, 'transformada') = (petroleo*ipc_base)/ipc_mes)
View(a)
precios_reales <- function(ind_ipc, año_base, mes_base,bien){
precios_mes$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
precios_mes <- precios_mes %>% mutate('pretroleo_tranformada' = (petroleo*ipc_base)/ipc_mes)
return(precios_mes)
}
a <- precios_reales('Indice', '2018', 'ene', 'petroleo')
View(a)
a[['cinco']]=5
View(a)
precios_reales <- function(ind_ipc, año_base, mes_base,bien){
precios_mes$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
nombre_variable <- paste0(bien,'_', año_base, '_', mes_base, '_', 'transformada')
precios_mes[[nombre_variable]]
return(precios_mes)
}
a <- precios_reales('Indice', '2018', 'ene', 'petroleo')
View(a)
precios_reales <- function(ind_ipc, año_base, mes_base,bien){
precios_mes$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
nombre_variable <- paste0(bien,'_', año_base, '_', mes_base, '_', 'transformada')
precios_mes[[nombre_variable]] <- (precio_carbon[[bien]]* ipc_base)/precio_carbon[['ipc_mes']]
return(precios_mes)
}
a <- pr
View(a)
precios_reales <- function(ind_ipc, año_base, mes_base,bien){
precios_mes$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
nombre_variable <- paste0(bien,'_', año_base, '_', mes_base, '_', 'transformada')
precios_mes[[nombre_variable]] <- (precio_carbon[[bien]]* ipc_base)/precio_mes[['ipc_mes']]
return(precios_mes)
}
a <- precios_reales('Indice', '2018', 'ene', 'petroleo')
precios_reales <- function(ind_ipc, año_base, mes_base,bien){
precios_mes$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
nombre_variable <- paste0(bien,'_', año_base, '_', mes_base, '_', 'transformada')
precios_mes[[nombre_variable]] <- (precio_mes[[bien]]* ipc_base)/precio_mes[['ipc_mes']]
return(precios_mes)
}
a <- precios_reales('Indice', '2018', 'ene', 'petroleo')
precios_reales <- function(ind_ipc, año_base, mes_base,bien){
precios_mes$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
nombre_variable <- paste0(bien,'_', año_base, '_', mes_base, '_', 'transformada')
precios_mes[[nombre_variable]] <- (precios_mes[[bien]]* ipc_base)/precios_mes[['ipc_mes']]
return(precios_mes)
}
a <- precios_reales('Indice', '2018', 'ene', 'petroleo')
View(a)
#Limpiaar entorno
rm(list = ls())
# 1.Importmos liberias -----------------
library(readr)
library(tidyverse)
# 1. Primer punto ----------------------------------------
## 1.1. importar bases de datos ------------------------------------------
carbon <- read_csv(unzip('Datos_taller.zip', 'precios_carbon.csv'))
brent <- read_csv(unzip('Datos_taller.zip', 'precios_petroleo.csv'))
gasolina <- read_csv(unzip('Datos_taller.zip', 'precios_gasolina.csv'))
gas_natural <- read_csv(unzip('Datos_taller.zip', 'precios_gas_natural.csv'))
ipc <- read_csv(unzip('Datos_taller.zip', '1.2.5.IPC_Serie_variaciones.csv'))
## 1.2. Exploración bases de datos ------------------------------------------
summary(carbon)
summary(brent)
summary(gasolina)
summary(gas_natural)
summary(ipc)
## 1.3. agregar fechas faltantes -------------------
agregar_fechas_faltantes <- function(dataframe) {
fechas_completas <- data.frame(fecha= seq(as.Date("2000-01-01"),as.Date("2024-01-01"),by="1 day"))
data <- full_join(fechas_completas, dataframe, by=c("fecha"))
return(data)
}
## 1.4 aplicar la función del 1.3 -------------------------
brent <- agregar_fechas_faltantes(brent)
gas_natural <- agregar_fechas_faltantes(gas_natural)
carbon <- agregar_fechas_faltantes(carbon)
gasolina <- agregar_fechas_faltantes(gasolina)
## 1.5 Union de las bases de datos -----------------------
df_unido <- left_join(brent, carbon, by='fecha') %>%
left_join(., gas_natural, by='fecha') %>%
left_join(., gasolina, by='fecha')
## 1.6 añadir variables de año y mes con lubridate -----------------------
df_unido$mes <- month(df_unido$fecha, label=T)
df_unido$año <-year(df_unido$fecha)
## 1.7 tabla % NA y remplazo de NA -----------------------
#Tabal de NA
t(t(as.matrix(colMeans(is.na(df_unido)))))
df_unido$precio_carbon <- df_unido$precio_carbon %>%
replace_na(mean(df_unido$precio_carbon,na.rm=T))
df_unido$precio_gas_natural <- df_unido$precio_gas_natural %>%
replace_na(mean(df_unido$precio_gas_natural,na.rm=T))
df_unido$precio_gasolina <- df_unido$precio_gasolina %>%
replace_na(mean(df_unido$precio_gasolina,na.rm=T))
df_unido$precio_petroleo <- df_unido$precio_petroleo %>%
replace_na(mean(df_unido$precio_petroleo,na.rm=T))
## 1.8 agrupar por año-mes  -----------------------
precios_mes <- df_unido %>% group_by(año,mes)  %>%
summarise(carbon=mean(precio_carbon),
gas_natural = mean(precio_gas_natural),
petroleo = mean(precio_petroleo),
gasolina = mean(precio_gasolina))
##### 1.9 Función IPC ------------------------
precios_reales <- function(ind_ipc, año_base, mes_base,bien,datos){
datos$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
nombre_variable <- paste0(bien,'_', año_base, '_', mes_base, '_', 'transformada')
precios_mes[[nombre_variable]] <- (precios_mes[[bien]]* ipc_base)/precios_mes[['ipc_mes']]
rm(datos$ipc_mes)
return(datos)
}
precios_real <- precios_reales('Indice', '2018', 'ene', 'petroleo', precios_mes)
precios_reales <- function(ind_ipc, año_base, mes_base,bien,datos){
datos$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
nombre_variable <- paste0(bien,'_', año_base, '_', mes_base, '_', 'transformada')
precios_mes[[nombre_variable]] <- (precios_mes[[bien]]* ipc_base)/ipc_mes
rm(datos$ipc_mes)
return(datos)
}
precios_real <- precios_reales('Indice', '2018', 'ene', 'petroleo', precios_mes)
precios_reales <- function(ind_ipc, año_base, mes_base,bien,datos){
datos$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
nombre_variable <- paste0(bien,'_', año_base, '_', mes_base, '_', 'transformada')
precios_mes[[nombre_variable]] <- (precios_mes[[bien]]* ipc_base)/datos[['ipc_mes']]
rm(datos$ipc_mes)
return(datos)
}
precios_real <- precios_reales('Indice', '2018', 'ene', 'petroleo', precios_mes)
precios_reales <- function(ind_ipc, año_base, mes_base,bien,datos){
datos$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
nombre_variable <- paste0(bien,'_', año_base, '_', mes_base, '_', 'transformada')
datos[[nombre_variable]] <- (datos[[bien]]* ipc_base)/datos[['ipc_mes']]
return(datos)
}
precios_real <- precios_reales('Indice', '2018', 'ene', 'petroleo', precios_mes)
precios_reales <- function(ind_ipc, año_base, mes_base,bien,datos){
datos$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
nombre_variable <- paste0(bien,'_', año_base, '_', mes_base, '_', 'transformada')
datos[[nombre_variable]] <- (datos[[bien]]* ipc_base)/datos[['ipc_mes']]
return(datos)
}
precios_real <- precios_reales('Indice', '2018', 'ene', 'petroleo', precios_mes)
precios_reales <- function(ind_ipc, año_base, mes_base,bien,datos){
datos$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
nombre_variable <- paste0(bien,'_', año_base, '_', mes_base, '_', 'transformada')
precios_mes[[nombre_variable]] <- (precios_mes[[bien]]* ipc_base)/precios_mes[['ipc_mes']]
return(precios_mes)
}
a <- precios_reales('Indice', '2018', 'ene', 'petroleo', precios_mes)
precios_reales <- function(ind_ipc, año_base, mes_base,bien){
precios_mes$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- precios_mes %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
nombre_variable <- paste0(bien,'_', año_base, '_', mes_base, '_', 'transformada')
precios_mes[[nombre_variable]] <- (precios_mes[[bien]]* ipc_base)/precios_mes[['ipc_mes']]
return(precios_mes)
}
a <- precios_reales('Indice', '2018', 'ene', 'petroleo')
View(a)
precios_reales <- function(ind_ipc, año_base, mes_base,bien,datos){
datos$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- datos %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
nombre_variable <- paste0(bien,'_', año_base, '_', mes_base, '_', 'transformada')
datos[[nombre_variable]] <- (datos[[bien]]* ipc_base)/datos[['ipc_mes']]
return(precios_mes)
}
a <- precios_reales('Indice', '2018', 'ene', 'petroleo', precios_mes)
View(a)
precios_reales <- function(ind_ipc, año_base, mes_base,bien,datos){
datos$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- datos %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
nombre_variable <- paste0(bien,'_', año_base, '_', mes_base, '_', 'transformada')
datos[[nombre_variable]] <- (datos[[bien]]* ipc_base)/datos[['ipc_mes']]
return(datos)
}
a <- precios_reales('Indice', '2018', 'ene', 'petroleo', precios_mes)
View(a)
precios_reales <- function(ind_ipc, año_base, mes_base,bien,datos){
datos$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- datos %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
nombre_variable <- paste0(bien,'_', año_base, '_', mes_base, '_', 'transformada')
datos[[nombre_variable]] <- (datos[[bien]]* ipc_base)/datos[['ipc_mes']]
datos <- datos %>% select(ipc_mes)
return(datos)
}
a <- precios_reales('Indice', '2018', 'ene', 'petroleo', precios_mes)
precios_reales <- function(ind_ipc, año_base, mes_base,bien,datos){
datos$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- datos %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
nombre_variable <- paste0(bien,'_', año_base, '_', mes_base, '_', 'transformada')
datos[[nombre_variable]] <- (datos[[bien]]* ipc_base)/datos[['ipc_mes']]
datos <- datos %>% select(-ipc_mes)
return(datos)
}
a <- precios_reales('Indice', '2018', 'ene', 'petroleo', precios_mes)
View(a)
#Limpiaar entorno
rm(list = ls())
# 1.Importmos liberias -----------------
library(readr)
library(tidyverse)
# 1. Primer punto ----------------------------------------
## 1.1. importar bases de datos ------------------------------------------
carbon <- read_csv(unzip('Datos_taller.zip', 'precios_carbon.csv'))
brent <- read_csv(unzip('Datos_taller.zip', 'precios_petroleo.csv'))
gasolina <- read_csv(unzip('Datos_taller.zip', 'precios_gasolina.csv'))
gas_natural <- read_csv(unzip('Datos_taller.zip', 'precios_gas_natural.csv'))
ipc <- read_csv(unzip('Datos_taller.zip', '1.2.5.IPC_Serie_variaciones.csv'))
## 1.2. Exploración bases de datos ------------------------------------------
summary(carbon)
summary(brent)
summary(gasolina)
summary(gas_natural)
summary(ipc)
## 1.3. agregar fechas faltantes -------------------
agregar_fechas_faltantes <- function(dataframe) {
fechas_completas <- data.frame(fecha= seq(as.Date("2000-01-01"),as.Date("2024-01-01"),by="1 day"))
data <- full_join(fechas_completas, dataframe, by=c("fecha"))
return(data)
}
## 1.4 aplicar la función del 1.3 -------------------------
brent <- agregar_fechas_faltantes(brent)
gas_natural <- agregar_fechas_faltantes(gas_natural)
carbon <- agregar_fechas_faltantes(carbon)
gasolina <- agregar_fechas_faltantes(gasolina)
## 1.5 Union de las bases de datos -----------------------
df_unido <- left_join(brent, carbon, by='fecha') %>%
left_join(., gas_natural, by='fecha') %>%
left_join(., gasolina, by='fecha')
## 1.6 añadir variables de año y mes con lubridate -----------------------
df_unido$mes <- month(df_unido$fecha, label=T)
df_unido$año <-year(df_unido$fecha)
## 1.7 tabla % NA y remplazo de NA -----------------------
#Tabal de NA
t(t(as.matrix(colMeans(is.na(df_unido)))))
df_unido$precio_carbon <- df_unido$precio_carbon %>%
replace_na(mean(df_unido$precio_carbon,na.rm=T))
df_unido$precio_gas_natural <- df_unido$precio_gas_natural %>%
replace_na(mean(df_unido$precio_gas_natural,na.rm=T))
df_unido$precio_gasolina <- df_unido$precio_gasolina %>%
replace_na(mean(df_unido$precio_gasolina,na.rm=T))
df_unido$precio_petroleo <- df_unido$precio_petroleo %>%
replace_na(mean(df_unido$precio_petroleo,na.rm=T))
## 1.8 agrupar por año-mes  -----------------------
precios_mes <- df_unido %>% group_by(año,mes)  %>%
summarise(carbon=mean(precio_carbon),
gas_natural = mean(precio_gas_natural),
petroleo = mean(precio_petroleo),
gasolina = mean(precio_gasolina))
##### 1.9 Función IPC ------------------------
transform_precios_reales <- function(ind_ipc, año_base, mes_base,bien,datos){
datos$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- datos %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
nombre_variable <- paste0(bien,'_', año_base, '_', mes_base, '_', 'transformada')
datos[[nombre_variable]] <- (datos[[bien]]* ipc_base)/datos[['ipc_mes']]
datos <- datos %>% select(-ipc_mes)
return(datos)
}
precios_reales <- transform_precios_reales ('Indice', '2018', 'ene', 'petroleo', precios_mes)
View(precios_reales)
View(precios_mes)
precios_reales <- transform_precios_reales ('Indice', '2018', 'ene', 'carbon', precios_mes)
precios_reales <- transform_precios_reales ('Indice', '2018', 'ene', 'gasolina', precios_mes)
precios_reales <- transform_precios_reales ('Indice', '2018', 'ene', 'gas_natural', precios_mes)
View(precios_reales)
precios_reales <- transform_precios_reales ('Indice', '2018', 'ene', 'petroleo', precios_mes)
precios_reales <- transform_precios_reales ('Indice', '2018', 'ene', 'carbon', precios_reales)
precios_reales <- transform_precios_reales ('Indice', '2018', 'ene', 'gasolina', precios_reales)
precios_reales <- transform_precios_reales ('Indice', '2018', 'ene', 'gas_natural',precios_reales)
View(precios_reales)
write.csv(precios_reales, 'precios nomimales y constantes(ene 2018).csv')
#Limpiaar entorno
rm(list = ls())
# 1.Importmos liberias -----------------
library(readr)
library(tidyverse)
library(stargazer)
# 1. Primer punto ----------------------------------------
## 1.1. importar bases de datos ------------------------------------------
carbon <- read_csv(unzip('Datos_taller.zip', 'precios_carbon.csv'))
brent <- read_csv(unzip('Datos_taller.zip', 'precios_petroleo.csv'))
gasolina <- read_csv(unzip('Datos_taller.zip', 'precios_gasolina.csv'))
gas_natural <- read_csv(unzip('Datos_taller.zip', 'precios_gas_natural.csv'))
ipc <- read_csv(unzip('Datos_taller.zip', '1.2.5.IPC_Serie_variaciones.csv'))
## 1.2. Exploración bases de datos ------------------------------------------
summary(carbon)
summary(brent)
summary(gasolina)
summary(gas_natural)
summary(ipc)
## 1.3. agregar fechas faltantes -------------------
agregar_fechas_faltantes <- function(dataframe) {
fechas_completas <- data.frame(fecha= seq(as.Date("2000-01-01"),as.Date("2024-01-01"),by="1 day"))
data <- full_join(fechas_completas, dataframe, by=c("fecha"))
return(data)
}
## 1.4 aplicar la función del 1.3 -------------------------
brent <- agregar_fechas_faltantes(brent)
gas_natural <- agregar_fechas_faltantes(gas_natural)
carbon <- agregar_fechas_faltantes(carbon)
gasolina <- agregar_fechas_faltantes(gasolina)
## 1.5 Union de las bases de datos -----------------------
df_unido <- left_join(brent, carbon, by='fecha') %>%
left_join(., gas_natural, by='fecha') %>%
left_join(., gasolina, by='fecha')
## 1.6 añadir variables de año y mes con lubridate -----------------------
df_unido$mes <- month(df_unido$fecha, label=T)
df_unido$año <-year(df_unido$fecha)
## 1.7 tabla % NA y remplazo de NA -----------------------
#Tabal de NA
t(t(as.matrix(colMeans(is.na(df_unido)))))
df_unido$precio_carbon <- df_unido$precio_carbon %>%
replace_na(mean(df_unido$precio_carbon,na.rm=T))
df_unido$precio_gas_natural <- df_unido$precio_gas_natural %>%
replace_na(mean(df_unido$precio_gas_natural,na.rm=T))
df_unido$precio_gasolina <- df_unido$precio_gasolina %>%
replace_na(mean(df_unido$precio_gasolina,na.rm=T))
df_unido$precio_petroleo <- df_unido$precio_petroleo %>%
replace_na(mean(df_unido$precio_petroleo,na.rm=T))
## 1.8 agrupar por año-mes  -----------------------
precios_mes <- df_unido %>% group_by(año,mes)  %>%
summarise(carbon=mean(precio_carbon),
gas_natural = mean(precio_gas_natural),
petroleo = mean(precio_petroleo),
gasolina = mean(precio_gasolina))
##### 1.9 Función IPC ------------------------
transform_precios_reales <- function(ind_ipc, año_base, mes_base,bien,datos){
datos$ipc_mes <- rev(ipc[[ind_ipc]])
precios_filtrados <- datos %>% filter(año==año_base, mes==mes_base)
ipc_base <- precios_filtrados[['ipc_mes']]
nombre_variable <- paste0(bien,'_', año_base, '_', mes_base, '_', 'transformada')
datos[[nombre_variable]] <- (datos[[bien]]* ipc_base)/datos[['ipc_mes']]
datos <- datos %>% select(-ipc_mes)
return(datos)
}
##### 1.10 aplicar función a todos los bienes ------------------------
precios_reales <- transform_precios_reales ('Indice', '2018', 'ene', 'petroleo', precios_mes)
precios_reales <- transform_precios_reales ('Indice', '2018', 'ene', 'carbon', precios_reales)
precios_reales <- transform_precios_reales ('Indice', '2018', 'ene', 'gasolina', precios_reales)
precios_reales <- transform_precios_reales ('Indice', '2018', 'ene', 'gas_natural',precios_reales)
##### 1.10 exportar bases de datos ------------------------
write.csv(precios_reales, 'precios nomimales y constantes(ene 2018).csv')
library(stargazer)
View(precios_reales)
precios <- ungroup(precios_reales) %>% select(-año, -mes)
View(precios)
stargazer(precios)
?stargazer
stargazer(precios, type='text')
precios
stargazer(precios, type='text')
stargazer(precios, type='text', summary=T)
precios
summary(precios)
stargazer(carbon, type='text', summary=T)
stargazer(ipc, type='text', summary=T)
View(precios)
precios
stargazer(precios, summary=T)
stargazer(carbon, summary=T)
stargazer(carbon, summary=T, type='text')
stargazer(carbon, summary=T, type='text')
stargazer(precios_mes, summary=T, type='text')
View(precios_mes)
stargazer(precios_reales, summary=T, type='text')
stargazer(df_unido, summary=T, type='text')
stargazer(precos_mes, summary=T, type='text')
stargazer(precios_mes, summary=T, type='text')
precios_mes <- ungroup(precios_mes)
stargazer(precios_mes, summary=T, type='text')
stargazer(precios_mes, summary=T, type='text')
stargazer(as.data.frame(precios_mes), summary=T, type='text')
stargazer(as.data.frame(precios_reales), summary=T, type='text')
stargazer(as.data.frame(precios_reales), summary=T, type='html')
View(precios)
View(precios_reales)
