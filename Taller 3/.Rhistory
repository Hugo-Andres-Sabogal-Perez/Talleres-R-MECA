read_html() %>%
html_nodes(xpath="/html/body/div[2]/div/div[3]/main/div[3]/div[3]/div[1]/table[3]/tbody/tr[1]/th[3]") %>%
html_nodes("a") %>%
html_attr("title")
links_guerras <- guerras_BC %>%
read_html() %>%
html_nodes(xpath="/html/body/div[2]/div/div[3]/main/div[3]/div[3]/div[1]/table[3]/tbody") %>%
html_nodes("a") %>%
html_attr("title")
links_guerras
links_guerras <- guerras_BC %>%
read_html() %>%
html_nodes(xpath="/html/body/div[2]/div/div[3]/main/div[3]/div[3]/div[1]/table[3]/tbody") %>%
html_nodes("a") %>%
html_attrs()
View(links_guerras)
links_guerras <- guerras_BC %>%
read_html() %>%
html_nodes(xpath="/html/body/div[2]/div/div[3]/main/div[3]/div[3]/div[1]/table[3]/tbody") %>%
html_nodes("a") %>%
html_attr("href")
nombres_guerras <- guerras_BC %>%
read_html() %>%
html_nodes(xpath="/html/body/div[2]/div/div[3]/main/div[3]/div[3]/div[1]/table[3]/tbody") %>%
html_nodes("a") %>%
html_attr("href")
nombres_guerras <- guerras_BC %>%
read_html() %>%
html_nodes(xpath="/html/body/div[2]/div/div[3]/main/div[3]/div[3]/div[1]/table[3]/tbody") %>%
html_nodes("a") %>%
html_attr("title")
links_guerras <- guerras_BC %>%
read_html() %>%
html_nodes(xpath="/html/body/div[2]/div/div[3]/main/div[3]/div[3]/div[1]/table[3]/tbody") %>%
html_nodes("a") %>%
html_attr("href")
links_guerras <- paste("https://en.wikipedia.org/",links_guerras, sep="")
print(links_guerras)
texto_conflictos <- links_guerras[1] %>%
read_html() %>%
html_nodes("p") %>%
html_text()
print(texto)
print(texto_conflictos)
df_batallas <- dataframe(link = character(), contenido=character())
df_batallas <- data.frame(link = character(), contenido=character())
df_batallas <- data.frame(link = character(), contenido=character())
for (link in c(1:10)){
#extraer texto de cada link
texto_conflictos <- links_guerras[link] %>%
read_html() %>%
html_nodes("p") %>%
html_text()
#reemplazar en dataframe
df_batallas <- df_batallas %>%
add_row(link=links_guerras[link], contenido=texto_conflictos)
}
??ad_row()
?? add_row()
library(dplyr)
for (link in c(1:10)){
#extraer texto de cada link
texto_conflictos <- links_guerras[link] %>%
read_html() %>%
html_nodes("p") %>%
html_text()
#reemplazar en dataframe
df_batallas <- df_batallas %>%
add_row(link=links_guerras[link], contenido=texto_conflictos)
}
View(df_batallas)
df_batallas <- data.frame(link = character(), contenido=character())
for (link in c(1:10)){
#extraer texto de cada link
texto_conflictos <- links_guerras[link] %>%
read_html() %>%
html_nodes("p") %>%
html_text() %>%
paste(collapse = " ")
#reemplazar en dataframe
df_batallas <- df_batallas %>%
add_row(link=links_guerras[link], contenido=texto_conflictos)
}
View(df_batallas)
for (link in c(11:20)){
#extraer texto de cada link
texto_conflictos <- links_guerras[link] %>%
read_html() %>%
html_nodes("p") %>%
html_text() %>%
paste(collapse = " ")
#reemplazar en dataframe
df_batallas <- df_batallas %>%
add_row(link=links_guerras[link], contenido=texto_conflictos)
}
df_batallas %>% mutate(rowid=row_number) %>% unnest_tokens(word, contenido)
a <- df_batallas %>% mutate(rowid=row_number) %>% unnest_tokens(word, contenido)
a <- df_batallas %>% mutate(rowid=row_number()) %>% unnest_tokens(word, contenido)
a <- df_batallas %>% mutate(rowid=row_number()) %>%
unnest_tokens(word, contenido) %>% count(rowid, count)
a <- df_batallas %>% mutate(rowid=row_number()) %>%
unnest_tokens(word, contenido) %>% count(rowid, word)
View(a)
a <- df_batallas %>% mutate(rowid=row_number()) %>%
unnest_tokens(word, contenido) %>% count(rowid, word) %>%
pivot_wider(names_from =word, values_from= n)
?? pivot_wider()
a <- df_batallas %>% mutate(rowid=row_number()) %>%
unnest_tokens(word, contenido) %>% count(rowid, word) %>%
pivot_wider(names_from = word, values_from = n)
View(a)
library(tidyr)
a <- df_batallas %>% mutate(rowid=row_number()) %>%
unnest_tokens(word, contenido) %>% count(rowid, word) %>%
pivot_wider(names_from = word, values_from = n)
View(a)
tabla <- guerras_BC %>%
read_html() %>%
html_table(xpath="/html/body/div[2]/div/div[3]/main/div[3]/div[3]/div[1]/table[3]")
tabla <- guerras_BC %>%
read_html() %>%
html_table()
? html_table
tabla[[2]]
tablas <- guerras_BC %>%
read_html() %>%
html_node("/html/body/div[2]/div/div[3]/main/div[3]/div[3]/div[1]/table[3]/tbody")
tablas <- guerras_BC %>%
read_html() %>%
html_node("/html/body/div[2]/div/div[3]/main/div[3]/div[3]/div[1]/table[3]")
tablas <- guerras_BC %>%
read_html() %>%
html_node("/html/body/div[2]/div/div[3]/main/div[3]/div[3]/div[1]/table[3]/tbody") %>%
html_table()
tablas <- guerras_BC %>%
read_html() %>%
html_node(xpath="/html/body/div[2]/div/div[3]/main/div[3]/div[3]/div[1]/table[3]/tbody") %>%
html_table()
tablas <- guerras_BC %>%
read_html() %>%
html_table()
tablas[[2]]
tabla <- guerras_BC %>%
read_html() %>%
html_node(xpath="/html/body/div[2]/div/div[3]/main/div[3]/div[3]/div[1]/table[3]/tbody") %>%
html_table()
tabla
rm(list = ls())
#0.1. Librerías ------------------------------------
library(dplyr)
library(sf)
library(openxlsx)
library(ggplot2)
library(plotly)
#0.2. Directorio -----------------------------------
setwd("C:/Users/Natalia/OneDrive - Universidad de los Andes/Documentos/2024-2/R/Talleres-R-MECA/Taller 3")
#1.1. Cargar shapefile -----------------------------
shapefile_col <- st_read("Datos/Shapefile/MGN_ADM_MPIO_GRAFICO.shp")
shapefile_col <- shapefile_col %>% subset(dpto_cnmbr !=
"ARCHIPIÉLAGO DE SAN ANDRÉS, PROVIDENCIA Y SANTA CATALINA") %>%
rename(codmpio = mpio_cdpmp)
#1.2. Cargar Panel CEDE ----------------------------
panel_cede <- read.xlsx("Datos/CEDE/PANEL_CARACTERISTICAS_GENERALES(2022).xlsx")
panel_cede <- panel_cede %>% select(contains("cod") | contains("pob"),
depto, provincia, municipio, ano, ao_crea) %>%
mutate(codmpio = sprintf("%05d", codmpio))
#1.3. Unir bases -----------------------------------
df_completo <- shapefile_col %>% left_join(panel_cede, by = "codmpio")
#Aquí perdí 100 observaciones pero no sé por qué (Pueden ser San Andrés y Providencia del panel CEDE?)
#1.4. Mapa interactivo -----------------------------
datos_mapa <- subset(df_completo, df_completo$ano == 2009)
mapa <- ggplot(data = datos_mapa) +
geom_sf(aes(fill = pobl_rur), color = "white", size = 0.2) +  # Color y borde de los municipios
scale_fill_viridis_c(name = "Población Rural", option = "viridis", labels = scales::comma) +  # Escala de color
labs(title = "Mapa de Población Rural por Municipio (2009)",
subtitle = "Distribución de la población rural a nivel municipal",
caption = "Fuente: CEDE") +
theme_minimal() +
theme(
plot.title = element_text(size = 16, face = "bold"),
plot.subtitle = element_text(size = 12),
legend.position = "bottom"
)
mapa_interactivo <- ggplotly(mapa)
mapa_interactivo
mapa_interactivo
mapa <- ggplot(data = datos_mapa) +
geom_sf(aes(fill = pobl_rur), color = "white", size = 0.2) +  # Color y borde de los municipios
scale_fill_viridis_c(name = "Población Rural", option = "viridis", labels = scales::comma) +  # Escala de color
labs(title = "Mapa de Población Rural por Municipio (2009)",
subtitle = "Distribución de la población rural a nivel municipal",
caption = "Fuente: CEDE") +
theme_minimal() +
theme(
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 12),
legend.position = "bottom"
)
mapa_interactivo <- ggplotly(mapa)
mapa_interactivo
summary(is.NA(datos_mapa$pobl_rur))
summary(is.na(datos_mapa$pobl_rur))
unique(datos_mapa$pobl_rur)
summary(unique(datos_mapa$pobl_rur))
rm(list = ls())
dev.off()
dev.off()
graphics.off()
library(dplyr)
library(sf)
library(openxlsx)
library(ggplot2)
library(plotly)
library(rvest)
library(tidytext)
library(rebus)
library(tidyr)
books <- "https://books.toscrape.com"
nombres_libros <- books %>%
read_html() %>%
html_node("h3 a") %>%
html_text()
nombres_libros
nombres_libros <- books %>%
read_html() %>%
html_node("h3") %>%
html_text()
nombres_libros <- books %>%
read_html() %>%
html_node(".product_pod") %>%
html_text()
nombres_libros <- books %>%
read_html() %>%
html_node("h3") %>%
html_text()
nombres_libros <- books %>%
read_html() %>%
html_node(".product_pod h3") %>%
html_text()
nombres_libros <- books %>%
read_html() %>%
html_node("article h3") %>%
html_text()
precio_libros <- books %>%
read_html() %>%
html_node(".price_color") %>%
html_text()
nombres_libros <- books %>%
read_html() %>%
html_nodes("article h3") %>%
html_text()
precio_libros <- books %>%
read_html() %>%
html_nodes(".price_color") %>%
html_text()
libros_df <- data.frame(
Titulo = nombres_libros,
Precio = precio_libros,
stringsAsFactors = FALSE
)
View(libros_df)
#Nombres de los libros
nombres_libros <- books %>%
read_html() %>%
html_nodes("article h3 a") %>%
html_text()
#Nombres de los libros
nombres_libros <- books %>%
read_html() %>%
html_nodes("article h3 a") %>%
html_attribute("title") %>%
html_text()
#Nombres de los libros
nombres_libros <- books %>%
read_html() %>%
html_nodes("article h3 a") %>%
html_attr("title") %>%
html_text()
Punto 2 --------------------------------------------
rm(list = ls())
##2.1. Books to scrape -------------------------------
books <- "https://books.toscrape.com"
##2.2. Extraer información ---------------------------
#Nombres de los libros
nombres_libros <- books %>%
read_html() %>%
html_nodes("article h3 a") %>%
html_attr("title") %>%
html_text()
#Nombres de los libros
nombres_libros <- books %>%
read_html() %>%
html_nodes("article h3 a") %>%
html_attr("title")
#hay títulos que quedan cortados
##2.2. Extraer información ---------------------------
#Nombres de los libros
nombres_libros <- books %>%
read_html() %>%
html_nodes("article h3 a") %>%
html_attr("title")
#Precios de los libros
precio_libros <- books %>%
read_html() %>%
html_nodes(".price_color") %>%
html_text()
#Crear base de datos
libros_df <- data.frame(
Titulo = nombres_libros,
Precio = precio_libros,
stringsAsFactors = FALSE
)
View(libros_df)
1:50
libros_df <- dataframe.()
libros_df <- data.frame()
for(page in 1:50) {
#Link
link <- paste0("https://books.toscrape.com/catalogue/page-", page, ".html")
#Nombres de los libros
nombres_libros <- books %>%
read_html() %>%
html_nodes("article h3 a") %>%
html_attr("title")
#Precios de los libros
precio_libros <- books %>%
read_html() %>%
html_nodes(".price_color") %>%
html_text()
#Crear base de datos
libros_df <- rbind(libros_df, data.frame(
Titulo = nombres_libros,
Precio = precio_libros,
stringsAsFactors = FALSE))
}
View(libros_df)
rm(list = ls())
##2.1. Books to scrape -------------------------------
books <- "https://books.toscrape.com"
##2.2. Extraer información ---------------------------
libros_df <- data.frame()
for(page in 1:50) {
#Link
link <- paste0(books, "/catalogue/page-", page, ".html")
#Nombres de los libros
nombres_libros <- books %>%
read_html() %>%
html_nodes("article h3 a") %>%
html_attr("title")
#Precios de los libros
precio_libros <- books %>%
read_html() %>%
html_nodes(".price_color") %>%
html_text()
#Crear base de datos
libros_df <- rbind(libros_df, data.frame(
Titulo = nombres_libros,
Precio = precio_libros,
stringsAsFactors = FALSE))
#Registro de progreso
print(paste("Pagina:" page))
libros_df <- data.frame()
for(page in 1:50) {
#Link
link <- paste0(books, "/catalogue/page-", page, ".html")
#Nombres de los libros
nombres_libros <- books %>%
read_html() %>%
html_nodes("article h3 a") %>%
html_attr("title")
#Precios de los libros
precio_libros <- books %>%
read_html() %>%
html_nodes(".price_color") %>%
html_text()
#Crear base de datos
libros_df <- rbind(libros_df, data.frame(
Titulo = nombres_libros,
Precio = precio_libros,
stringsAsFactors = FALSE))
#Registro de progreso
print(paste("Pagina:", page))
}
View(libros_df)
#Taller 3
rm(list = ls())
#0.1. Librerías -------------------------------------
library(dplyr)
library(sf)
library(openxlsx)
library(ggplot2)
library(plotly)
library(rvest)
library(tidytext)
library(rebus)
library(tidyr)
#0.2. Directorio ------------------------------------
setwd("C:/Users/hugos/OneDrive - Universidad de los andes/MECA/Semestre 1/taller R/Talleres-R-MECA/Taller 3")
##1.1. Cargar shapefile -----------------------------
shapefile_col <- st_read("Datos/Shapefile/MGN_ADM_MPIO_GRAFICO.shp")
shapefile_col <- shapefile_col %>% subset(dpto_cnmbr !=
"ARCHIPIÉLAGO DE SAN ANDRÉS, PROVIDENCIA Y SANTA CATALINA") %>%
rename(codmpio = mpio_cdpmp)
View(shapefile_col)
panel_cede <- read.xlsx("Datos/CEDE/PANEL_CARACTERISTICAS_GENERALES(2022).xlsx")
panel_cede <- panel_cede %>% select(contains("cod") | contains("pob"),
depto, provincia, municipio, ano, ao_crea) %>%
mutate(codmpio = sprintf("%05d", codmpio))
df_completo <- shapefile_col %>% left_join(panel_cede, by = "codmpio")
datos_mapa <- subset(df_completo, df_completo$ano == 2009)
mapa <- ggplot(data = datos_mapa) +
geom_sf(aes(fill = pobl_rur), color = "white", size = 0.2) +  # Color y borde de los municipios
scale_fill_viridis_c(name = "Población Rural", option = "viridis", labels = scales::comma) +  # Escala de color
labs(title = "Mapa de Población Rural por Municipio (2009)") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold"),
legend.position = "bottom")
mapa_interactivo <- ggplotly(mapa)
mapa_interactivo
#Taller 3
rm(list = ls())
#0.1. Librerías -------------------------------------
library(dplyr)
library(sf)
library(openxlsx)
library(ggplot2)
library(plotly)
library(rvest)
library(tidytext)
library(rebus)
library(tidyr)
#0.2. Directorio ------------------------------------
setwd("C:/Users/hugos/OneDrive - Universidad de los andes/MECA/Semestre 1/taller R/Talleres-R-MECA/Taller 3")
# Punto 1 -------------------------------------------
##1.1. Cargar shapefile -----------------------------
shapefile_col <- st_read("Datos/Shapefile/MGN_ADM_MPIO_GRAFICO.shp")
shapefile_col <- shapefile_col %>% subset(dpto_cnmbr !=
"ARCHIPIÉLAGO DE SAN ANDRÉS, PROVIDENCIA Y SANTA CATALINA") %>%
rename(codmpio = mpio_cdpmp)
##1.2. Cargar Panel CEDE ----------------------------
panel_cede <- read.xlsx("Datos/CEDE/PANEL_CARACTERISTICAS_GENERALES(2022).xlsx")
panel_cede <- panel_cede %>% select(contains("cod") | contains("pob"),
depto, provincia, municipio, ano, ao_crea) %>%
mutate(codmpio = sprintf("%05d", codmpio))
##1.3. Unir bases -----------------------------------
df_completo <- shapefile_col %>% left_join(panel_cede, by = "codmpio")
#Aquí perdí 100 observaciones pero no sé por qué (Pueden ser San Andrés y Providencia del panel CEDE?)
##1.4. Mapa interactivo -----------------------------
datos_mapa <- subset(df_completo, df_completo$ano == 2009)
mapa <- ggplot(data = datos_mapa) +
geom_sf(aes(fill = pobl_rur), color = "white", size = 0.2) +  # Color y borde de los municipios
scale_fill_viridis_c(name = "Población Rural", option = "viridis", labels = scales::comma) +  # Escala de color
labs(title = "Mapa de Población Rural por Municipio (2009)") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold"),
legend.position = "bottom")
# mapa_interactivo <- ggplotly(mapa)
mapa
mapa <- ggplot(data = datos_mapa) +
geom_sf(aes(fill = pobl_rur), color = "black", size = 0.2) +  # Color y borde de los municipios
scale_fill_viridis_c(name = "Población Rural", option = "viridis", labels = scales::comma) +  # Escala de color
labs(title = "Mapa de Población Rural por Municipio (2009)") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold"),
legend.position = "bottom")
# mapa_interactivo <- ggplotly(mapa)
mapa
#Taller 3
rm(list = ls())
#0.1. Librerías -------------------------------------
library(dplyr)
library(sf)
library(openxlsx)
library(ggplot2)
library(plotly)
library(rvest)
library(tidytext)
library(rebus)
library(tidyr)
#0.2. Directorio ------------------------------------
setwd("C:/Users/hugos/OneDrive - Universidad de los andes/MECA/Semestre 1/taller R/Talleres-R-MECA/Taller 3")
# Punto 1 -------------------------------------------
##1.1. Cargar shapefile -----------------------------
shapefile_col <- st_read("Datos/Shapefile/MGN_ADM_MPIO_GRAFICO.shp")
shapefile_col <- shapefile_col %>% subset(dpto_cnmbr !=
"ARCHIPIÉLAGO DE SAN ANDRÉS, PROVIDENCIA Y SANTA CATALINA") %>%
rename(codmpio = mpio_cdpmp)
##1.2. Cargar Panel CEDE ----------------------------
panel_cede <- read.xlsx("Datos/CEDE/PANEL_CARACTERISTICAS_GENERALES(2022).xlsx")
panel_cede <- panel_cede %>% select(contains("cod") | contains("pob"),
depto, provincia, municipio, ano, ao_crea) %>%
mutate(codmpio = sprintf("%05d", codmpio))
##1.3. Unir bases -----------------------------------
df_completo <- shapefile_col %>% left_join(panel_cede, by = "codmpio")
#Aquí perdí 100 observaciones pero no sé por qué (Pueden ser San Andrés y Providencia del panel CEDE?)
##1.4. Mapa interactivo -----------------------------
datos_mapa <- subset(df_completo, df_completo$ano == 2009)
mapa <- ggplot(data = datos_mapa) +
geom_sf(aes(fill = pobl_rur), size = 0.1) +  # Color y borde de los municipios
scale_fill_viridis_c(name = "Población Rural", option = "viridis", labels = scales::comma) +  # Escala de color
labs(title = "Mapa de Población Rural por Municipio (2009)") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold"),
legend.position = "bottom")
mapa
mapa_interactivo <- ggplotly(mapa)
mapa_interactivo
mapa
